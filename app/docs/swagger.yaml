basePath: /
definitions:
  dto.CommentCreateRequest:
    properties:
      author_name:
        type: string
      content:
        type: string
    required:
    - author_name
    - content
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.PostCreateRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  dto.PostUpdateRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Comment:
    properties:
      author_name:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post_id:
        type: integer
    type: object
  models.Post:
    properties:
      author_id:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for users, blogs (posts) and comments
  title: Simple Blog API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login and get JWT
      tags:
      - auth
  /posts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: List all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      parameters:
      - description: post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.PostCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create post
      tags:
      - posts
  /posts/{id}:
    delete:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: no content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete post
      tags:
      - posts
    get:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      - description: update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.PostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update post
      tags:
      - posts
  /posts/{id}/comments:
    get:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
      summary: List comments for a post
      tags:
      - comments
    post:
      consumes:
      - application/json
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      - description: comment payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CommentCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add comment to a blog
      tags:
      - comments
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: register payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
